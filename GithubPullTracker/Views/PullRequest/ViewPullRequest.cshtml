@model GithubPullTracker.Models.PullRequestCommentsView

@Html.Partial("PullRequestHeader", Model.Details)

<div class="container body-content">
    <div id="home">
        <div class="main-comment" id="description">
            <a href="@Model.Details.CreatedBy.html_url" target="_blank" class="avatar">
                <img src="@(Model.Details.CreatedBy.avatar_url)&s=40" alt="@Model.Details.CreatedBy.login" />
            </a>
            <div class="comment">
                <div class="header">
                    <a href="@Model.Details.CreatedBy.html_url" target="_blank">@Model.Details.CreatedBy.login</a> commented <time class="timeago" datetime="@Model.Details.CreatedAt.ToString("o")">@Model.Details.CreatedAt</time>
                </div>


                @if (string.IsNullOrWhiteSpace(Model.Details.Body))
                {
                    <div class="markdown">
                        <em>No description provided.</em>
                    </div>
                }
                else
                {
                    <div class="markdown">@Html.Raw(Model.Details.Body)</div>
                }
            </div>

        </div>

        @foreach (var evnt in Model.Events)
        {
            @Html.DisplayFor(c => evnt)
        }

    </div>

    <aside id="sidebar">
        <section>
            <h3>Labels</h3>

            @if (Model.Labels.Any())
            {
                foreach (var l in Model.Labels)
                {
                    <span class="label" style="background-color:#@l.color">@l.name</span>
                }
            }
            else
            {
                <span>None yet</span>
            }
        </section>
        <section>
            <h3>Assignee</h3>

            @if (Model.Details.Assignees.Any())
            {
                foreach (var assignee in Model.Details.Assignees)
                {
                    <a href="@assignee.html_url">
                        <img src="@(assignee.avatar_url)&s=40" alt="@assignee.login" />
                        @assignee.login
                    </a>
                }
            }
            else
            {
                <span>Unassigned</span>
            }
        </section>
        <section>
            <h3>Approved By</h3>
            @if (Model.Details.ApprovedBy.Any())
            {
                foreach (var assignee in Model.Details.ApprovedBy)
                {
                    <a href="@assignee.html_url">
                        <img src="@(assignee.avatar_url)&s=40" alt="@assignee.login" />
                        @assignee.login
                    </a>
                }
            }
            else
            {<span>awaiting approval</span>}
        </section>
        @if (Model.Details.OutstandingAprovers.Any())
        {
            <section>
                <h3>
                    Outstanding Approvers
                    @(Model.Details.AllRequired ? "(all)" : "(any)")
                </h3>
                @foreach (var assignee in Model.Details.OutstandingAprovers)
                {
                    <a href="@assignee.html_url">
                        <img src="@(assignee.avatar_url)&s=40" alt="@assignee.login" />
                        @assignee.login
                    </a>
                }
           
            </section>
        }
        @if (!Model.Details.IsMerged)
        {
            <div class="approvals  show-fixed" >
                    <form action="@Url.Action("Approve")" method="post">
                        <input type="hidden" name="approved" value="@((!Model.Details.HasUserApproved).ToString())" />
                        <input type="hidden" name="headsha" value="@(Model.Details.HeadSha)" />
                        @if (this.ViewContext.RouteData.Values.ContainsKey("path"))
                    {

                            <input type="hidden" name="path" value="@(this.ViewContext.RouteData.Values["path"])" />
                        }
                        @if (Model.Details.HasUserApproved)
                    {
                            <button class="unapprove"><i class="icon icon-x"></i>unapprove</button>
                        }
                        else
                        {
                            <button class="approve"><i class="icon icon-check"></i>approve</button>
                        }
                    </form>
            </div>
        }

        <a href="http://github.com/@Model.Details.RepositoryOwner/@Model.Details.RepositoryName/pull/@Model.Details.Number" target="_blank" class="right show-fixed">view on github</a>
    </aside>





    <script type="x-template" id="home-comment-template">
        @Html.Partial("_MainCommentTemplate")
    </script>
    <script type="x-template" id="home-file-comment-template">
        @Html.Partial("_MainFileCommentTemplate")
    </script>
    <script type="x-template" id="inline-file-comment-template">
        @Html.Partial("_InlineFileCommentTemplate")
    </script>


</div>

@section scripts{
    <style id="mergeHeight">
        .CodeMirror-merge {
            height: auto;
        }
    </style>
    <script>
       

        window.repocontext = '@(Model.Details.RepositoryOwner)/@(Model.Details.RepositoryName)';
        var itm = $('#sidebar');
        var posTop = itm.position().top;
        var posleft = itm.position().left;
        var fixSize = function () {
            if (itm.hasClass('fixed')) {
                itm.removeClass('fixed');
                var pos = itm.position().left - lastScrollX;
                var width = itm.width();
                itm.css({ "left": pos + 'px', width: width + 'px' });
                itm.addClass('fixed');
            }
        }
        $(window).resize(fixSize);
        var lastScrollX = 0;
        $(window).on('scroll', function () {
            
            if (window.scrollX > 0 && window.scrollX != lastScrollX)
            {
                lastScrollX = window.scrollX;
                fixSize();
            }
            if (window.scrollY > posTop) {
                itm.addClass('fixed');
                fixSize();
            } else {
                itm.attr('style', '');
                itm.removeClass('fixed');
            }

        }).scroll();


        @*diffViewScript('@Model.CurrentFile', '@Model.HeadSha', '@Url.Action("ViewPullRequest")', @Html.Raw(Model.TreeData.ToString()), '@Model.RepositoryOwner','@Model.RepositoryName')*@

    </script>
}
